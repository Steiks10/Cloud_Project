name: Docker deployment

on:
  push:
    branches: [ master ]  # Ajusta segÃºn tu rama principal

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    - name: Docker Login
        env:
          DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USER }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
        run: |
          docker login -u $DOCKERHUB_USER -p $DOCKERHUB_PASSWORD
      - name: Build Docker Image
        run: |
          docker build -t express:latest ./angular-cc-1-server/
      - name: Push Docker Image
        run: |
          docker push $DOCKERHUB_USER/postgres:15
    # steps:
    # - uses: actions/checkout@v2
    
    # - name: Set up Docker Buildx
    #   uses: docker/setup-buildx-action@v1
    
    # - name: Login to DockerHub
    #   uses: docker/login-action@v1
    #   with:
    #     username: ${{ secrets.DOCKERHUB_USERNAME }}
    #     password: ${{ secrets.DOCKER_PASSWORD }}
    
    # - name: Build and push Docker image
    #   uses: docker/build-push-action@v2
    #   with:
    #     context: .
    #     push: true
    #     tags: ${{ secrets.DOCKERHUB_USERNAME }}/express:latest
    
    # - name: Install kubectl
    #   uses: azure/setup-kubectl@v1
    
    # - name: Deploy to Microk8s
    #   run: |
    #     echo "${{ secrets.KUBE_CONFIG }}" > kubeconfig
    #     export KUBECONFIG=./kubeconfig
        
    #     # Obtener la IP del servicio de la base de datos
    #     DB_IP=$(kubectl get service db-1-service -o jsonpath='{.spec.clusterIP}')
        
    #     # Reemplazar las variables en el archivo de despliegue
    #     sudo sed -i 's|${DOCKER_USERNAME}|${{ secrets.DOCKERHUB_USERNAME }}|g' backend-deployment.yaml
    #     sudo sed -i 's|${DB_IP}|'$DB_IP'|g' backend-deployment.yaml
        
    #     # Aplicar el despliegue
    #     sudo kubectl apply -f backend-deployment.yaml
    
    # - name: Restart Backend Deployment
    #   run: |
    #     export KUBECONFIG=./kubeconfig
    #     kubectl rollout restart deployment/backend